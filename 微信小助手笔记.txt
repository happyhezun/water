HTTP请求：
请求方法：
请求参数：
headers:
cookies:
请求端的信息：

Django Request对象
请求方法：- Request对象的method属性
客户端信息：- Request对象的META属性
Cookies: - Request 的 COOKIES 属性
请求参数： - Request 对象中的 QueryDict

backend_ch1_sec1
apis

views

urls.py
path('weather/', include('apis.urls))

urls.py
from django.urls import path
from .views import weather

urlpatterns = [
    path('', wather.helloworld),
]
注释csrf中间件。

wather.py

from django.http import HttpResponse

def helloworld(request):
    print ('request method:', request.method)
    print ('request META', request.META)
    print ('request cookies', request.COOKIES)
    print ('request QueryDict', request.GETs)
    return HttpResponse('ok')

http://localhost:8000/wather/?info=test

HTTP应答
状态码
应答内容
内容格式

Django Response对象

状态码 - Response对象的status属性
应答内容 - Response对象的content属性
格式：
延伸的Response子类 - (JsonResponse 、 FileResponse)

HttpResponse(content="ok", status=200)
HttpResponse(content="Hello Django Response", status=201)

m = {
    "message": "Hello Django Response",
}

return JonseResponse(data=m, safe=False, status=200)

天气查询：


Django url 配置

Django 处理请求的寻址逻辑
项目层面: 根路由模块 - urlpatterns
应用层面： 子路由模块 - urlpatterns
视图层面：匹配成功调用指定视图

setting.py
ROOT_URLCONF 

Django的RESTful url设计
API接口的RESTRESTful设计
说明接口类型(视图、模版、API)
/view
/template
/api
接口的版本
/view/v1
/template/v1.2
/api/v2.0.1

增删改查的RESTful设计
HTTP请求中的GET、POST、PUT、DELETE方法
GET: 从服务器获取资源
POST: 在服务器新建一个资源
PUT: 在服务器更新资源
DELETE: 从服务器中删除资源
GET: /api/v1.0/user
url中过滤信息 (分页、指定)
GET: /api/v1.0/user/1
*GET：/api/v1.0/user?page=1

GET: /api/v1.0/user?name='imooc'
说明资源类型
GET: /api/v1.0/resource/image?md5=<md5>
GET: /api/v1.0/resource/doc?md5=<md5>

/api/v1.0.2/user?page=1

资源路径的RESTful设计

